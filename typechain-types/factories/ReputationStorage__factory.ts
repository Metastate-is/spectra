/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ReputationStorage,
  ReputationStorageInterface,
} from "../ReputationStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromParticipantId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toParticipantId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "markType",
        type: "string",
      },
    ],
    name: "MarkStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMark",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fromParticipantId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toParticipantId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "value",
            type: "bool",
          },
          {
            internalType: "string",
            name: "markType",
            type: "string",
          },
        ],
        internalType: "struct ReputationStorage.Mark",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarksCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marks",
    outputs: [
      {
        internalType: "uint256",
        name: "fromParticipantId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toParticipantId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
      {
        internalType: "string",
        name: "markType",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromParticipantId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toParticipantId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
      {
        internalType: "string",
        name: "markType",
        type: "string",
      },
    ],
    name: "storeMark",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bc1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f44f6e6146100515780633e00897714610084578063a969e9dd146100b4578063dd404f27146100d2575b600080fd5b61006b60048036038101906100669190610471565b6100ee565b60405161007b9493929190610558565b60405180910390f35b61009e60048036038101906100999190610471565b6101c3565b6040516100ab919061066f565b60405180910390f35b6100bc6102c0565b6040516100c99190610691565b60405180910390f35b6100ec60048036038101906100e7919061073d565b6102cc565b005b600081815481106100fe57600080fd5b90600052602060002090600402016000915090508060000154908060010154908060020160009054906101000a900460ff1690806003018054610140906107f4565b80601f016020809104026020016040519081016040528092919081815260200182805461016c906107f4565b80156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b5050505050905084565b6101cb610407565b600082815481106101df576101de610825565b5b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820160009054906101000a900460ff16151515158152602001600382018054610237906107f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610263906107f4565b80156102b05780601f10610285576101008083540402835291602001916102b0565b820191906000526020600020905b81548152906001019060200180831161029357829003601f168201915b5050505050815250509050919050565b60008080549050905090565b60006040518060800160405280878152602001868152602001851515815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555060608201518160030190816103a79190610a2f565b5050503373ffffffffffffffffffffffffffffffffffffffff167f869bc3f705f2a40f8169d008b9db1bfdca5cb62ef49c6d35ef458dac1c001fcb86868686866040516103f8959493929190610b3d565b60405180910390a25050505050565b60405180608001604052806000815260200160008152602001600015158152602001606081525090565b600080fd5b600080fd5b6000819050919050565b61044e8161043b565b811461045957600080fd5b50565b60008135905061046b81610445565b92915050565b60006020828403121561048757610486610431565b5b60006104958482850161045c565b91505092915050565b6104a78161043b565b82525050565b60008115159050919050565b6104c2816104ad565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105025780820151818401526020810190506104e7565b60008484015250505050565b6000601f19601f8301169050919050565b600061052a826104c8565b61053481856104d3565b93506105448185602086016104e4565b61054d8161050e565b840191505092915050565b600060808201905061056d600083018761049e565b61057a602083018661049e565b61058760408301856104b9565b8181036060830152610599818461051f565b905095945050505050565b6105ad8161043b565b82525050565b6105bc816104ad565b82525050565b600082825260208201905092915050565b60006105de826104c8565b6105e881856105c2565b93506105f88185602086016104e4565b6106018161050e565b840191505092915050565b600060808301600083015161062460008601826105a4565b50602083015161063760208601826105a4565b50604083015161064a60408601826105b3565b506060830151848203606086015261066282826105d3565b9150508091505092915050565b60006020820190508181036000830152610689818461060c565b905092915050565b60006020820190506106a6600083018461049e565b92915050565b6106b5816104ad565b81146106c057600080fd5b50565b6000813590506106d2816106ac565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126106fd576106fc6106d8565b5b8235905067ffffffffffffffff81111561071a576107196106dd565b5b602083019150836001820283011115610736576107356106e2565b5b9250929050565b60008060008060006080868803121561075957610758610431565b5b60006107678882890161045c565b95505060206107788882890161045c565b9450506040610789888289016106c3565b935050606086013567ffffffffffffffff8111156107aa576107a9610436565b5b6107b6888289016106e7565b92509250509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061080c57607f821691505b60208210810361081f5761081e6107c5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026108e57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826108a8565b6108ef86836108a8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061092c6109276109228461043b565b610907565b61043b565b9050919050565b6000819050919050565b61094683610911565b61095a61095282610933565b8484546108b5565b825550505050565b600090565b61096f610962565b61097a81848461093d565b505050565b5b8181101561099e57610993600082610967565b600181019050610980565b5050565b601f8211156109e3576109b481610883565b6109bd84610898565b810160208510156109cc578190505b6109e06109d885610898565b83018261097f565b50505b505050565b600082821c905092915050565b6000610a06600019846008026109e8565b1980831691505092915050565b6000610a1f83836109f5565b9150826002028217905092915050565b610a38826104c8565b67ffffffffffffffff811115610a5157610a50610854565b5b610a5b82546107f4565b610a668282856109a2565b600060209050601f831160018114610a995760008415610a87578287015190505b610a918582610a13565b865550610af9565b601f198416610aa786610883565b60005b82811015610acf57848901518255600182019150602085019450602081019050610aaa565b86831015610aec5784890151610ae8601f8916826109f5565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610b1c83856104d3565b9350610b29838584610b01565b610b328361050e565b840190509392505050565b6000608082019050610b52600083018861049e565b610b5f602083018761049e565b610b6c60408301866104b9565b8181036060830152610b7f818486610b10565b9050969550505050505056fea264697066735822122076ef2893446bdec82e77f3e628fe0b16b8d7479d68e0d9d233c2ad205e3321cc64736f6c63430008180033";

type ReputationStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReputationStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReputationStorage__factory extends ContractFactory {
  constructor(...args: ReputationStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReputationStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReputationStorage__factory {
    return super.connect(runner) as ReputationStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReputationStorageInterface {
    return new Interface(_abi) as ReputationStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ReputationStorage {
    return new Contract(address, _abi, runner) as unknown as ReputationStorage;
  }
}
